version: 0.2

phases:
  install:
    commands:
      - echo Installing kubectl
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - docker version

      - mv ./kubectl /usr/local/bin/kubectl
      - mkdir ~/.kube
      - aws eks --region ap-northeast-2 update-kubeconfig --name goorm-eks-cluster
      - kubectl get po -n kube-system

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...

      - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-2.amazonaws.com/

      - COMMIT_HASH1=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-4)
      - COMMIT_HASH2=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 5-8)

      - BOT_IMAGE_TAG=BOT-${COMMIT_HASH1:=latest}
      - ALARM_IMAGE_TAG=ALARM-${COMMIT_HASH2:=latest}

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker images...

      - docker build --no-cache -t $IMAGE_REPO_NAME_BOT:$BOT_IMAGE_TAG ./telegrambot
      - docker build --no-cache -t $IMAGE_REPO_NAME_ALARM:$ALARM_IMAGE_TAG ./telegrambot/cronjob
      
      - docker tag $IMAGE_REPO_NAME_BOT:$BOT_IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME_BOT:$BOT_IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME_ALARM:$ALARM_IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME_ALARM:$ALARM_IMAGE_TAG

      - echo Pushing the Image
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME_BOT:$BOT_IMAGE_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME_ALARM:$ALARM_IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`

      - AWS_ECR_URI_BOT=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME_BOT:$BOT_IMAGE_TAG
      - AWS_ECR_URI_ALARM=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME_ALARM:$ALARM_IMAGE_TAG
      
      - echo $AWS_ECR_URI_BOT
      - echo $AWS_ECR_URI_ALARM

      - sed -i.bak 's#AWS_ECR_URI_BOT#'"$AWS_ECR_URI_BOT"'#' ./manifests/telegrambotservice.yaml
      - sed -i.bak 's#AWS_ECR_URI_ALARM#'"$AWS_ECR_URI_ALARM"'#' ./manifests/alarmservice.yaml
      
      - kubectl -n eks-telegram apply -f ./manifests/telegrambotservice.yaml 
      - kubectl -n eks-telegram apply -f ./manifests/alarmservice.yaml

      - kubectl get all -n eks-telegram

