version: 0.2

phases:
  install:
    commands:
      - echo Installing kubectl
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - docker version
      - mv ./kubectl /usr/local/bin/kubectl
      - aws sts get-caller-identity
      - mkdir ~/.kube
      - aws eks --region ap-northeast-2 update-kubeconfig --name eks-demo
      - kubectl get po -n kube-system
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/
      # Commit_Hash를 통해 이미지 태그 이용
      - COMMIT_HASH1=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-4)
      - COMMIT_HASH2=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 5-8)
      # - COMMIT_HASH3=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 9-12)

      - webF_IMAGE_TAG=F-${COMMIT_HASH1:=latest}
      - webB_IMAGE_TAG=B-${COMMIT_HASH2:=latest}
      # - telegramBot_IMAGE_TAG=${COMMIT_HASH3:=latest}
  build:
    commands:
      - echo Build started on `date`
#      - echo Pulling Image
#      - docker pull leedowon/goormtest:1.1
#      - docker images
      - echo Building the Docker images...
#      - sed -i 's@HOST@'"$BackName"'@' ./server/Api.js

      - docker build -f ./client/dockerfile -t $IMAGE_REPO_NAMEF:$webF_IMAGE_TAG ./client
      - docker build -f ./server/dockerfile -t $IMAGE_REPO_NAMEB:$webB_IMAGE_TAG ./server
#      - docker build -t $IMAGE_REPO_NAME:$telegramBot_IMAGE_TAG -f {DockerfileName} .
      - docker tag $IMAGE_REPO_NAMEF:$webF_IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAMEF:$webF_IMAGE_TAG
      - docker tag $IMAGE_REPO_NAMEB:$webB_IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAMEB:$webB_IMAGE_TAG
#      - docker tag $IMAGE_REPO_NAME:$telegramBot_IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$telegramBot_IMAGE_TAG
#      - docker tag leedowon/goormtest:1.1 $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Pushing the Image
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAMEF:$webF_IMAGE_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAMEB:$webB_IMAGE_TAG
#      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$telegramBot_IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - webF_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAMEF:$webF_IMAGE_TAG
      - webB_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAMEB:$webB_IMAGE_TAG
#      - telegramBot_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$telegramBot_IMAGE_TAG   
#      - sed -i 's@ECR_WEBF_IMAGE@'"$webF_URI"'@' Deployment.yaml
#      - sed -i 's@ECR_WEBB_IMAGE@'"$webB_URI"'@' Deployment.yaml
      - kubectl apply -f ./manifests/backend-deployment.yaml
      - kubectl apply -f ./manifests/backend-service.yaml
      - kubectl apply -f ./manifests/frontend-deployment.yaml
      - kubectl apply -f ./manifests/frontend-service.yaml
      - kubectl apply -f ./manifests/ingress.yaml

